<?xml version="1.0" encoding="UTF-8" ?>
<!--
* al_dbus.xml, contains dbus definitions for org.GENIVI.AppL
*
* Copyright (c) 2011 Wind River Systems, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License version 2 as
* published by the Free Software Foundation.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
* See the GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
*
*/-->

<!-- Wind River AL Daemon -  DBus interface -->

<node name="/org/GENIVI/AppL">
  <!--
  /**
  * org.GENIVI.AppL
  *
  * Contains the implementation of the exported Dbus API functions for the AL Daemon
  *
  * 		method calls : RUN, RUNAS, STOP, STOPAS, SUSPEND, RESUME, CHANGE TASK STATE
  *	        signals : TASK STARTED, TASK STOPPED, CHANGE TASK STATE COMPLETE, GLOBAL STATE NOTIFICATION
  *
  * Object path:
  *     /org/GENIVI/AppL
  *
  */
  -->
  <interface name="org.GENIVI.AppL">
	<annotation name="org.freedesktop.DBus.GLib.CSymbol" value="al_dbus"/>
	 <method name="Run"> 
         <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
		      <arg name="command_line" type="s" direction="in"/>
                      <arg name="parent_pid" type="i" direction="in"/> 
		      <arg name="foreground" type="b" direction="in"/>
		      <arg name="new_pid" type="i" direction="out"/>
            </method>
            <method name="RunAs">
	    <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
		      <arg name="command_line" type="s" direction="in"/>
                      <arg name="parent_pid" type="i" direction="in"/> 
		      <arg name="foreground" type="b" direction="in"/>
		      <arg name="app_uid" type="i" direction="in"/>
		      <arg name="app_gid" type="i" direction="in"/>
		      <arg name="new_pid" type="i" direction="out"/>
            </method>
            <method name="Stop">
	    <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
		      <arg name="app_pid" type="i" direction="in"/>
            </method>
            <method name="StopAs">
	    <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
		      <arg name="app_pid" type="i" direction="in"/>
		      <arg name="app_uid" type="i" direction="in"/>
		      <arg name="app_gid" type="i" direction="in"/>
            </method>
            <method name="Resume">
	    <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
		      <arg name="app_pid" type="i" direction="in"/>
            </method>
            <method name="Suspend">
	    <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
		      <arg name="app_pid" type="i" direction="in"/>
            </method>
            <method name="Restart">
	    <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
		      <arg name="app_name" type="s" direction="in"/>
            </method>
            <method name="ChangeTaskState">
	    <annotation name="org.freedesktop.DBus.GLib.Async" value=""/>
		      <arg name="app_pid" type="i" direction="in"/>
		      <arg name="foreground" type="b" direction="in"/>
            </method>
 	    <signal name="GlobalStateNotification">
		       <arg name="app_status" type="s"/>
            </signal>
            <signal name="TaskStarted">
		      <arg name="app_pid" type="i"/>
		      <arg name="image_path" type="s"/>
            </signal>
            <signal name="TaskStopped">
		      <arg name="app_pid" type="i"/>
		      <arg name="image_path" type="s"/>
            </signal>
	    <signal name="ChangeTaskStateComplete">
		      <arg name="app_name" type="s"/>
		      <arg name="app_state" type="s"/>
            </signal>
  </interface>
</node>
